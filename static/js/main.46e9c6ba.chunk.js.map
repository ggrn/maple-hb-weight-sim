{"version":3,"sources":["components/PanelHeader.js","config/options.js","components/PanelBody.js","components/Panel.js","App.js","reportWebVitals.js","index.js","worker/hb.worker.js"],"names":["options","PanelHeader","weights","onWeightChanged","isRun","onRunClicked","onDownloadClicked","onSettingButtonClicked","isNewLogic","onNewLogicChanged","className","slice","map","text","index","weight","length","value","style","justifyContent","paddingTop","disabled","onClick","marginLeft","PanelHeaderElement","type","min","max","step","onChange","RunMode","letterSpacing","checked","optionValues","gradeRate","PanelBody","stat","Graph","counts","optionConfigs","i","Math","GraphElement","width","Statistics","run","maxScore","maxStrScore","maxDexScore","maxIntScore","maxLukScore","over70","toFixed","over80","over90","over100","over110","over120","over130","over140","over150","over160","over170","over180","StatElement","readOnly","Panel","id","defaultWeight","defaultIsNewLogic","useState","setWeights","setIsRun","setStat","setIsNewLogic","worker","setWorker","useEffect","HBWorker","console","log","terminate","onmessage","ev","data","link","document","createElement","download","Date","now","href","click","URL","revokeObjectURL","useCallback","weightIndex","Number","target","postMessage","n","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","addMethods","methods","module","exports","w","Worker","name"],"mappings":"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","file":"static/js/main.46e9c6ba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst options = [\n  'STR',\n  'DEX',\n  'INT',\n  'LUK',\n  'DSD',\n  'DSI',\n  'DSL',\n  'DDI',\n  'DDL',\n  'DIL',\n  'MHP',\n  'MMP',\n  'LVD',\n  'DEF',\n  'ATK',\n  'MAT',\n  'MOV',\n  'JUM',\n  'ALL',\n];\n\nconst PanelHeader = ({\n  weights,\n  onWeightChanged,\n  isRun,\n  onRunClicked,\n  onDownloadClicked,\n  onSettingButtonClicked,\n  isNewLogic,\n  onNewLogicChanged,\n}) => {\n  return (\n    <div className=\"PanelHeader\">\n      <div className=\"PanelHeaderRow\">\n        {options.slice(0, 10).map((text, index) => {\n          return (\n            <PanelHeaderElement\n              key={text}\n              text={text}\n              weight={weights[index]}\n              isRun={isRun}\n              onWeightChanged={onWeightChanged(index)}\n            />\n          );\n        })}\n      </div>\n      <div className=\"PanelHeaderRow\">\n        {options.slice(10, options.length).map((text, index) => {\n          return (\n            <PanelHeaderElement\n              key={text}\n              text={text}\n              weight={weights[index + 10]}\n              isRun={isRun}\n              onWeightChanged={onWeightChanged(index + 10)}\n            />\n          );\n        })}\n        <RunMode value={isNewLogic} onNewLogicChanged={onNewLogicChanged} isRun={isRun} />\n      </div>\n      <div className=\"PanelHeaderRow\" style={{ justifyContent: 'flex-end', paddingTop: '5px' }}>\n        <button disabled={isRun} onClick={onSettingButtonClicked('all1')}>\n          Set All 1\n        </button>\n        <button disabled={isRun} onClick={onSettingButtonClicked('expect')}>\n          Set Expect\n        </button>\n        <button onClick={onDownloadClicked} style={{ marginLeft: '5px' }}>\n          download as csv\n        </button>\n        <button onClick={onRunClicked} style={{ marginLeft: '5px' }}>\n          {isRun ? 'Stop' : 'Run'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PanelHeader;\n\nPanelHeader.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.number).isRequired,\n  onWeightChanged: PropTypes.func.isRequired,\n  isRun: PropTypes.bool.isRequired,\n  onRunClicked: PropTypes.func.isRequired,\n  isNewLogic: PropTypes.bool.isRequired,\n  onNewLogicChanged: PropTypes.func.isRequired,\n};\n\nconst PanelHeaderElement = ({ text, weight, onWeightChanged, isRun }) => {\n  return (\n    <div className=\"PanelHeaderElement\">\n      <span>{text}</span>\n      <input\n        type=\"number\"\n        min={1}\n        max={100}\n        step={1}\n        value={weight}\n        onChange={onWeightChanged}\n        disabled={isRun}\n      />\n    </div>\n  );\n};\n\nPanelHeaderElement.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nconst RunMode = ({ value, onNewLogicChanged, isRun }) => {\n  return (\n    <div className=\"PanelHeaderElement\">\n      <span style={{ letterSpacing: '-0.1em' }}>New Logic</span>\n      <input type=\"checkbox\" checked={value} onChange={onNewLogicChanged} disabled={isRun} />\n    </div>\n  );\n};\n","const options = {\n  options: [\n    'STR',\n    'DEX',\n    'INT',\n    'LUK',\n    'DSD',\n    'DSI',\n    'DSL',\n    'DDI',\n    'DDL',\n    'DIL',\n    'MHP',\n    'MMP',\n    'LVD',\n    'DEF',\n    'ATK',\n    'MAT',\n    'MOV',\n    'JUM',\n    'ALL',\n  ],\n  optionValues: [\n    [27, 36, 45, 54, 63],\n    [27, 36, 45, 54, 63],\n    [27, 36, 45, 54, 63],\n    [27, 36, 45, 54, 63],\n    [15, 20, 25, 30, 35],\n    [15, 20, 25, 30, 35],\n    [15, 20, 25, 30, 35],\n    [15, 20, 25, 30, 35],\n    [15, 20, 25, 30, 35],\n    [15, 20, 25, 30, 35],\n    [1440, 1920, 2400, 2880, 3360],\n    [1440, 1920, 2400, 2880, 3360],\n    [15, 20, 25, 30, 35],\n    [27, 36, 45, 54, 63],\n    [3, 4, 5, 6, 7],\n    [3, 4, 5, 6, 7],\n    [3, 4, 5, 6, 7],\n    [3, 4, 5, 6, 7],\n    [3, 4, 5, 6, 7],\n  ],\n  gradeRate: [0, 29, 45, 25, 1],\n};\n\nexport default options;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport optionConfigs from '../config/options';\n\nconst PanelBody = ({ stat }) => {\n  return (\n    <div className=\"PanelBody\">\n      <Graph stat={stat} />\n      <Statistics stat={stat} />\n    </div>\n  );\n};\n\nPanelBody.propTypes = {\n  stat: PropTypes.any,\n};\n\nexport default PanelBody;\n\nconst Graph = ({ stat }) => {\n  const { counts = [] } = stat;\n  return (\n    <div className=\"Graph\">\n      {optionConfigs.options.map((text, i) => {\n        return (\n          <GraphElement text={text} value={(counts[i] / Math.max(...counts)) * 100} key={text} />\n        );\n      })}\n    </div>\n  );\n};\n\nconst GraphElement = ({ text, value }) => {\n  return (\n    <div className=\"GraphElement\">\n      <span>{text}</span>\n      <div className=\"Bar\">\n        <div className=\"BarElement\" style={{ width: `${value}%` }}></div>\n      </div>\n    </div>\n  );\n};\n\nconst Statistics = ({ stat }) => {\n  return (\n    <div className=\"Statistics\">\n      <StatElement text={'Runs'} value={stat.run} />\n      <StatElement text={'Max Score'} value={stat.maxScore} />\n      <StatElement text={'Max STR Score'} value={stat.maxStrScore} />\n      <StatElement text={'Max DEX Score'} value={stat.maxDexScore} />\n      <StatElement text={'Max INT Score'} value={stat.maxIntScore} />\n      <StatElement text={'Max LUK Score'} value={stat.maxLukScore} />\n      <StatElement text={'Over 70 (%)'} value={((stat.over70 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 80 (%)'} value={((stat.over80 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 90 (%)'} value={((stat.over90 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 100 (%)'} value={((stat.over100 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 110 (%)'} value={((stat.over110 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 120 (%)'} value={((stat.over120 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 130 (%)'} value={((stat.over130 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 140 (%)'} value={((stat.over140 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 150 (%)'} value={((stat.over150 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 160 (%)'} value={((stat.over160 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 170 (%)'} value={((stat.over170 / stat.run) * 100).toFixed(8)} />\n      <StatElement text={'Over 180 (%)'} value={((stat.over180 / stat.run) * 100).toFixed(8)} />\n    </div>\n  );\n};\n\nconst StatElement = ({ text, value }) => {\n  return (\n    <div className=\"StatElement\">\n      <span>{text}</span>\n      <input type=\"number\" disabled value={value} readOnly />\n    </div>\n  );\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport PanelHeader from './PanelHeader';\nimport PanelBody from './PanelBody';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport HBWorker from 'workerize-loader!../worker/hb.worker';\n\nconst Panel = ({ id, defaultWeight, defaultIsNewLogic = false }) => {\n  const [weights, setWeights] = useState(defaultWeight);\n  const [isRun, setIsRun] = useState(false);\n  const [stat, setStat] = useState({});\n  const [isNewLogic, setIsNewLogic] = useState(defaultIsNewLogic);\n\n  const [worker, setWorker] = useState(null);\n  useEffect(() => {\n    setWorker((worker) => (worker === null ? new HBWorker() : worker));\n\n    return () => {\n      console.log('term');\n      setWorker((worker) => {\n        worker?.terminate();\n        return null;\n      });\n    };\n  }, [setWorker]);\n\n  useEffect(() => {\n    if (worker) {\n      worker.onmessage = (ev) => {\n        if (ev.data.type === 'run') {\n          if (ev.data.value) {\n            setIsRun(true);\n          } else {\n            setIsRun(false);\n          }\n        } else if (ev.data.type === 'stat') {\n          setStat(ev.data.value);\n        } else if (ev.data.type === 'download' && ev.data.link) {\n          const link = document.createElement('a');\n          link.download = `maple_hb_result_${Date.now()}.csv`;\n          link.href = ev.data.link;\n          link.click();\n          URL.revokeObjectURL(link.href);\n        }\n      };\n    }\n  }, [worker, setIsRun]);\n\n  const onWeightChanged = useCallback(\n    (weightIndex) => (ev) => {\n      setWeights((weights) => [\n        ...weights.slice(0, weightIndex),\n        Number(ev.target.value),\n        ...weights.slice(weightIndex + 1, weights.length),\n      ]);\n    },\n    [setWeights],\n  );\n\n  const onRunClicked = useCallback(() => {\n    if (isRun) {\n      worker?.postMessage({ run: false });\n    } else {\n      worker?.postMessage({ run: true, weights, isNewLogic });\n    }\n  }, [worker, isRun, weights, isNewLogic]);\n\n  const onDownloadClicked = useCallback(() => {\n    worker?.postMessage({ download: true });\n  }, [worker]);\n\n  const onSettingButtonClicked = useCallback(\n    (type) => () => {\n      if (type === 'all1') setWeights([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);\n      if (type === 'expect')\n        setWeights([5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 8, 8, 4, 9, 8, 8, 10, 10, 1]);\n    },\n    [setWeights],\n  );\n\n  const onNewLogicChanged = useCallback(() => {\n    setIsNewLogic((n) => !n);\n  }, [setIsNewLogic]);\n\n  return (\n    <div className=\"Panel\">\n      <PanelHeader\n        weights={weights}\n        onWeightChanged={onWeightChanged}\n        isRun={isRun}\n        onRunClicked={onRunClicked}\n        onDownloadClicked={onDownloadClicked}\n        onSettingButtonClicked={onSettingButtonClicked}\n        isNewLogic={isNewLogic}\n        onNewLogicChanged={onNewLogicChanged}\n      />\n      <PanelBody stat={stat} />\n    </div>\n  );\n};\n\nPanel.propTypes = {\n  defaultWeight: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default Panel;\n","import './App.css';\nimport Panel from './components/Panel';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Panel defaultWeight={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]} />\n      <Panel\n        defaultWeight={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n        defaultIsNewLogic\n      />\n      <Panel defaultWeight={[5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 8, 8, 4, 9, 8, 8, 10, 10, 1]} />\n      <Panel\n        defaultWeight={[5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 8, 8, 4, 9, 8, 8, 10, 10, 1]}\n        defaultIsNewLogic\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"839c59a959f71af55cf5.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}